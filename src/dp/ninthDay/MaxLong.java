package src.dp.ninthDay;

public class MaxLong {
    /**
     * 问题描述：求一个数组的递增最长子序列
     * 原数组arr[]
     * 思路：使用一个辅助数组fz[]
     * fz[i] 代表的意义：长度为i+1的序列，最小的结尾的数是fz[i]
     * 更新fz原则。找到fz中比他最近的（二分法），大于等于的一个数进行替换，如果找不到，则在后面加上
     * 有额外一个数组l[i]，代表位置为i，以arr[i]作为结尾时，最长的序列长度
     * 还原：找到最大的数。往左找一个数值比他小且长度刚好比他小1的数。
     */

    /**
     * 问题描述：信封问题。每个信封都有长高。（1，2） （2，4） 如果w1<w2 && h1<h2则第二个信封可以嵌套第一个。求最多嵌套多少个
     * 思路：使先根据w从小到大排好序，（h从大到小排），接着求h的最长子序列
     */

}
